version: 2.1

commands:
  print_pipeline_id:
    description: "Print Pipeline ID to the console"
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

defaults: &jobsdefault
  docker:
    - image: circleci/node:13.8.0
  working_directory: ~/project

jobs:
  say-hello:
    <<: *jobsdefault
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say Hello"
          command: "echo Hello"

  print_world:
    <<: *jobsdefault
    steps:
      - checkout
      - run:
          name: "Say World"
          command: "echo World"

  print_my_name:
    <<: *jobsdefault
    steps:
      - checkout
      - run:
          name: "Say My Name"
          command: echo ${MY_NAME}

  save_hello_world_output:
    <<: *jobsdefault
    steps:
      - checkout
      - run:
          name: "Save Hello World"
          command: echo "Hello World" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    <<: *jobsdefault
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: "Print Output"
          command: cat ~/output.txt

  print_pipeline_id_job:
    <<: *jobsdefault
    steps:
      - print_pipeline_id:
          id: ${CIRCLE_WORKFLOW_ID}
  



  # Building My First Pipeline

  build_frontend:
    <<: *jobsdefault
    steps:
      - checkout
      - run: npm i
      - save_cache:
        key: "npm-packages"
        paths:
          - /frontend/node_modules
      - run: npm run lint
  
  test_frontend:
    <<: *jobsdefault
    steps:
      - checkout
      - restore_cache:
        keys:
          - "npm-packages"
      - run: npm run test

  analyze_frontend:
  <<: *jobsdefault
  steps:
    - checkout
    - restore_cache:
      keys:
        - "npm-packages"
    - run: npm audit


workflows:
  # say-hello-workflow:
  #   jobs:
      # - say-hello
      # - print_hello
      # - print_world:
      #     requires: [print_hello]
      # - print_my_name
      # - save_hello_world_output
      # - print_output_file:
      #     requires: [save_hello_world_output]
      # - print_pipeline_id_job
  
  build_pipeline:
    jobs:
      - build_frontend
      - test_frontend
      - analyze_frontend
